{"version":3,"sources":["style/theme.js","actions/Actions.js","containers/LoginPage/styled.js","components/Loading/index.js","containers/LoginPage/index.js","containers/Post/styled.js","containers/TopicVote/styled.js","containers/TopicVote/index.js","services/util.js","containers/Post/index.js","containers/NewPost/fieldsToForm.js","containers/NewPost/styled.js","containers/NewPost/index.js","containers/Feed/styled.js","containers/Feed/index.js","containers/Register/styled.js","containers/Register/Register.js","containers/CommentVote/styled.js","containers/CommentVote/index.js","components/Comments/styled.js","components/Comments/index.js","containers/NewComment/styled.js","containers/NewComment/index.js","containers/PostDetail/styled.js","containers/PostDetail/index.js","containers/Router/index.js","reducers/posts.js","containers/Header/styled.js","reducers/index.js","containers/Header/index.js","containers/App/index.js","index.js"],"names":["createMuiTheme","baseUrl","getPosts","dispatch","a","token","localStorage","getItem","axios","get","headers","auth","response","setPosts","data","setLoadingOff","setLoadingFree","alert","console","log","getPostDetail","id","setPostDetail","post","setUser","userData","type","payload","posts","newUser","newUserData","TextFieldLogin","styled","TextField","ButtonLogin","Button","PaperLogin","Paper","TypographyLogin","Typography","WrapperIcon","div","WrapperInputs","Loading","Backdrop","style","zIndex","open","this","props","CircularProgress","color","Component","LoginPage","handleWhitLoading","loading","setState","handleInput","event","target","name","value","handleLogin","preventDefault","state","email","password","login","goToFeed","elevation","fontSize","variant","component","onSubmit","label","required","onChange","Divider","onClick","goToRegister","connect","user","loginData","JSON","stringify","setItem","window","push","routes","cadastro","root","StyledPaper","WrapperTop","WrapperBottom","StyledAvatar","Avatar","StyledCommentIcon","CommentIcon","WrapperContent","WrapperDiv","TopicVote","handlewithVote","voteValue","sendValue","userVoteDirection","vote","direction","topicVote","topicId","upIcon","colorValue","transform","downIcon","votesCount","i","v","put","calcHour","UTCTime","text","fulltime","Date","inteiro","Math","trunc","minutos","floor","horas","dias","diasinteiro","datautc","diafull","getDate","monthfull","getMonth","yearfull","getFullYear","gna","random","Post","textComment","commentsNumber","goToLogin","createdAt","textData","key","selectedId","src","username","title","fieldsToForm","multiline","rows","TextFieldStyled","NewPost","handleInputChange","form","handleSubmission","newPost","FormControl","fullWidth","map","field","pattern","inputProps","min","margin","Feed","handleWhitSelect","goToPostDetail","searchResults","filter","toLowerCase","includes","searchTerms","postDataFull","item","postDataSearch","length","postComments","postdetails","userRegister","Register","handleInputnewUser","handleOnSubmit","newRegister","CommentVote","commentVote","commentId","ti","ci","WrapperVote","Comments","formData","NewComment","newComment","PostDetail","postDetail","comments","Router","history","exact","path","initialState","action","terms","StyledAppBar","AppBar","WrapperDivLogo","WrapperUserData","StyledTextField","Header","setSearch","existUser","parse","userdata","size","setLogout","logodata","searchdata","placeholder","InputProps","startAdornment","InputAdornment","position","clear","createBrowserHistory","middlewares","applyMiddleware","routerMiddleware","thunk","__REDUX_DEVTOOLS_EXTENSION__","f","store","createStore","combineReducers","router","connectRouter","compose","App","theme","CssBaseline","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.b35467a7.chunk.js","sourcesContent":["import {createMuiTheme} from \"@material-ui/core\";\r\n\r\nexport default createMuiTheme({\r\n    \"palette\": {\r\n        \"common\": {\r\n            \"black\": \"#000\",\r\n            \"white\": \"#fff\"\r\n        },\r\n        \"background\": {\r\n            \"paper\": \"#fff\",\r\n            \"default\": \"rgba(219, 224, 230, 1)\"\r\n        },\r\n        \"primary\": {\r\n            \"light\": \"rgba(88, 175, 240, 1)\",\r\n            \"main\": \"rgba(0, 121, 210, 1)\",\r\n            \"dark\": \"rgba(0, 71, 125, 1)\",\r\n            \"contrastText\": \"#fff\"\r\n        },\r\n        \"secondary\": {\r\n            \"light\": \"rgba(193, 198, 201, 1)\",\r\n            \"main\": \"rgba(134, 138, 141, 1)\",\r\n            \"dark\": \"rgba(102, 105, 107, 1)\",\r\n            \"contrastText\": \"rgba(255, 255, 255, 1)\"\r\n        },\r\n        \"error\": {\r\n            \"light\": \"#e57373\",\r\n            \"main\": \"#f44336\",\r\n            \"dark\": \"#d32f2f\",\r\n            \"contrastText\": \"#fff\"\r\n        },\r\n        \"text\": {\r\n            \"primary\": \"rgba(0, 0, 0, 0.87)\",\r\n            \"secondary\": \"rgba(0, 121, 210, 1)\",\r\n            \"disabled\": \"rgba(0, 0, 0, 0.38)\",\r\n            \"hint\": \"rgba(65, 117, 5, 1)\"\r\n        }\r\n    }\r\n});\r\n","import axios from 'axios'\r\n\r\nconst baseUrl = \"https://us-central1-missao-newton.cloudfunctions.net/fourEddit\"\r\n\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n    const loginData = {\r\n        email,\r\n        password\r\n    }\r\n    try {\r\n        const response = await axios.post(`${baseUrl}/login`, loginData);\r\n        const token = response.data.token\r\n        const user = JSON.stringify(response.data.user)\r\n        console.log(response.data)\r\n        localStorage.setItem(\"token\", token)\r\n        localStorage.setItem(\"user\", user)\r\n        dispatch(setUser(response.data.user))\r\n        dispatch(setLoadingOff())\r\n        dispatch(setLoadingFree())\r\n    } catch (error) {\r\n        window.alert(\"Desculpe, o login de deu errado, tente novamente\", error)\r\n    }\r\n}\r\n\r\nexport const newRegister = (form) => async (dispatch) => {\r\n    console.log(form)\r\n    try {\r\n        const response = await axios.post(`${baseUrl}/signup`, form)\r\n        dispatch(newUser(response.data))\r\n        const token = response.data.token\r\n        const user = JSON.stringify(response.data.user)\r\n        localStorage.setItem(\"user\", user)\r\n        localStorage.setItem(\"token\", token)\r\n        dispatch(setUser(response.data.user))\r\n        dispatch(setLoadingOff())\r\n        dispatch(setLoadingFree())\r\n    } catch (error) {\r\n        window.alert('Ops, não foi possível cadastrar, tente novamente!')\r\n        console.log(error)\r\n    }\r\n}\r\n\r\nexport const getPosts = () => async (dispatch) => {\r\n    try {\r\n        const token = localStorage.getItem(\"token\");\r\n        const response = await axios.get(`${baseUrl}/posts`, {\r\n            headers: {\r\n                auth: token\r\n            }\r\n        })\r\n        dispatch(setPosts(response.data))\r\n        dispatch(setLoadingOff())\r\n        dispatch(setLoadingFree())\r\n    } catch (error) {\r\n        alert('erro ao logar. contate o suporte', error)\r\n        console.log(error)\r\n    }\r\n}\r\n\r\nexport const newPost = (form) => async (dispatch) => {\r\n    try {\r\n        const token = localStorage.getItem(\"token\");\r\n        const response = await axios.post(`${baseUrl}/posts`, form, {\r\n            headers: {\r\n                auth: token\r\n            }\r\n        })\r\n        dispatch(getPosts())\r\n    } catch (error) {\r\n        alert('erro ao enviar. contate o suporte', error)\r\n        console.log(error)\r\n    }\r\n}\r\n\r\nexport const getPostDetail = (id) => async (dispatch) => {\r\n    try {\r\n        const token = localStorage.getItem(\"token\");\r\n        const response = await axios.get(`${baseUrl}/posts/${id}`, {\r\n            headers: {\r\n                auth: token\r\n            }\r\n        })\r\n        dispatch(setPostDetail(response.data.post))\r\n        dispatch(setLoadingOff())\r\n        dispatch(setLoadingFree())\r\n\r\n    } catch (error) {\r\n        alert('erro ao pegar detalhes. contate o suporte', error)\r\n        console.log(error)\r\n    }\r\n}\r\n\r\nexport const newComment = (id, form) => async (dispatch) => {\r\n    console.log(form)\r\n    console.log(id)\r\n    try {\r\n        const token = localStorage.getItem(\"token\")\r\n        const response = await axios.post(`${baseUrl}/posts/${id}/comment`, form, {\r\n            headers: {\r\n                auth: token\r\n            }\r\n        })\r\n        dispatch(getPostDetail(id))\r\n        dispatch(setLoadingOff())\r\n        dispatch(setLoadingFree())\r\n\r\n    } catch (error) {\r\n        window.alert('Ops, não foi possível comentar!')\r\n        console.log(error)\r\n    }\r\n}\r\n\r\nexport const topicVote = (i, v) => async (dispatch) => {\r\n    try {\r\n        const token = localStorage.getItem(\"token\")\r\n        const response = await axios.put(`${baseUrl}/posts/${i}/vote`, v, {\r\n            headers: {\r\n                auth: token\r\n            }\r\n        })\r\n        dispatch(getPosts())\r\n        dispatch(getPostDetail(i))\r\n        dispatch(setLoadingOff())\r\n        dispatch(setLoadingFree())\r\n    } catch (error) {\r\n        window.alert('não foi possivel votar')\r\n        console.log(error)\r\n    }\r\n}\r\n\r\nexport const commentVote = (ti, v, ci) => async (dispatch) => {\r\n    try {\r\n        const token = localStorage.getItem(\"token\")\r\n        const response = await axios.put(`${baseUrl}/posts/${ti}/comment/${ci}/vote`, v, {\r\n            headers: {\r\n                auth: token\r\n            }\r\n        })\r\n        dispatch(getPostDetail(ti))\r\n        dispatch(setLoadingOff())\r\n        dispatch(setLoadingFree())\r\n    } catch (error) {\r\n        window.alert('não foi possivel votar')\r\n        console.log(error)\r\n    }\r\n}\r\n\r\nexport const setUser = (userData) => ({type: 'SET_USER', payload: {\r\n        userData\r\n    }})\r\n\r\nexport const setSearch = (terms) => ({type: 'SET_SEARCH', payload: {\r\n        terms\r\n    }})\r\n\r\nconst setPosts = (posts) => ({type: 'SET_POSTS', payload: {\r\n        posts\r\n    }})\r\n\r\nexport const newUser = (newUserData) => ({type: 'NEW_USER', payload: {\r\n        newUserData\r\n    }})\r\n\r\nexport const setLoadingOff = () => ({type: 'SET_LOADING_OFF', payload: {}})\r\n\r\nexport const setLoadingFree = () => ({type: 'SET_LOADING_FREE', payload: {}})\r\n\r\nexport const setLogout = () => (localStorage.clear(), {\r\n    type: 'SET_LOGOUT',\r\n    payload: {}\r\n})\r\n\r\nconst setPostDetail = (post) => ({type: 'SET_POST_DETAIL', payload: {\r\n        post\r\n    }})\r\n","import styled from 'styled-components';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\n\r\nexport const TextFieldLogin = styled(TextField)`\r\nwidth:30vw;\r\nmargin: 20px;\r\n@media (max-width: 768px) {\r\n    display:flex;\r\n    flex-direction: column;\r\n    width: 80vw;\r\n    height:10vh;\r\n}\r\n`\r\nexport const ButtonLogin = styled(Button)`\r\n@media (max-width: 768px) {\r\n    flex-direction: column;\r\n    margin-bottom: 30px;\r\n}\r\n`\r\nexport const PaperLogin = styled(Paper)`\r\ndisplay: flex;\r\nflex-direction: column;\r\nalign-items: flex-start;\r\nwidth: 40vw;\r\nheight: 80vh;\r\nmargin-left: 25vw;\r\npadding:30px;\r\n@media (max-width: 768px) {\r\n    flex-direction: column;\r\n    margin-bottom: 2px;\r\n    height: 95vh;\r\n    width: 95%;\r\n    margin-left: 10px;\r\n}\r\n`\r\n\r\nexport const TypographyLogin = styled(Typography)`\r\nmargin: o auto;\r\n`\r\nexport const WrapperIcon = styled.div `\r\nbackground-color: darkorange;\r\npadding: 10px;\r\nborder-radius: 50%;\r\nwidth: auto;\r\nheight: width;\r\nmargin: 20px;\r\n`\r\n\r\nexport const WrapperDiv = styled.div `\r\ndisplay: flex;\r\nflex-direction: row;\r\njustify-content: center;\r\ntext-align: center;\r\nalign-content: center;\r\nalign-items: center;\r\n`\r\n\r\nexport const WrapperInputs = styled.div `\r\nmargin-bottom: 20px;\r\n@media (max-width: 768px) {\r\n    flex-direction: column;\r\n    margin-bottom: 2px;\r\n    margin-left: 1px;\r\n}\r\n`\r\n","import React, {Component} from \"react\";\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nclass Loading extends Component {\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <Backdrop style={\r\n                        {zIndex: 10}\r\n                    }\r\n                    open={\r\n                        this.props.open\r\n                }>\r\n                    <CircularProgress color=\"primary\"/>\r\n                </Backdrop>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Loading\r\n","import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from '../../actions/Actions';\r\nimport {push} from \"connected-react-router\";\r\nimport {routes} from \"../../containers/Router/index\";\r\nimport {TextFieldLogin, PaperLogin, ButtonLogin, TypographyLogin, WrapperIcon, WrapperInputs} from './styled'\r\nimport RedditIcon from '@material-ui/icons/Reddit';\r\nimport Divider from '@material-ui/core/Divider'\r\nimport Loading from '../../components/Loading/index'\r\n\r\n\r\nclass LoginPage extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            email: '',\r\n            password: '',\r\n            loading: false\r\n        };\r\n    }\r\n\r\n    componentWillReceiveProps() {\r\n        this.handleWhitLoading()\r\n    }\r\n    handleWhitLoading = () => {\r\n        if (this.props.loading === 'desliga') {\r\n            this.setState({loading: false})\r\n        }\r\n    };\r\n\r\n    handleInput = (event) => {\r\n        this.setState({[event.target.name]: event.target.value})\r\n    }\r\n\r\n    handleLogin = (event) => {\r\n        this.setState({loading: true})\r\n        event.preventDefault();\r\n        const {email, password} = this.state;\r\n        this.props.login(email, password)\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        const token = localStorage.getItem(\"token\")\r\n\r\n        if (token !== null) {\r\n            this.props.goToFeed();\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        const {email, password} = this.state\r\n        return (\r\n            <PaperLogin elevation={2}>\r\n                {\r\n                < Loading\r\n                open = {\r\n                    this.state.loading\r\n                }\r\n                />\r\n            }\r\n                <WrapperIcon>\r\n                    <RedditIcon fontSize={'large'}/>\r\n                </WrapperIcon>\r\n                <TypographyLogin variant=\"h5\" component=\"h3\" color='primary'>Sign in</TypographyLogin>\r\n                <WrapperInputs>\r\n                    <form onSubmit={\r\n                        this.handleLogin\r\n                    }>\r\n                        <TextFieldLogin variant=\"outlined\" name='email' type='email' label='Digite seu email' required\r\n                            value={email}\r\n                            onChange={\r\n                                this.handleInput\r\n                            }/>\r\n                        <TextFieldLogin variant=\"outlined\" name='password' type='password' label='Digite sua senha' required\r\n                            value={password}\r\n                            onChange={\r\n                                this.handleInput\r\n                            }/>\r\n                        <WrapperInputs>\r\n                            <ButtonLogin type=\"submit\" variant=\"contained\" color='primary'>SIGN IN</ButtonLogin>\r\n                        </WrapperInputs>\r\n                    </form>\r\n                    <Divider/>\r\n                </WrapperInputs>\r\n                <TypographyLogin variant=\"h5\" component=\"h3\" color='primary'>New to 4eddit ?</TypographyLogin>\r\n                <ButtonLogin onClick={\r\n                        this.props.goToRegister\r\n                    }\r\n                    variant=\"contained\"\r\n                    color='secondary'>SIGN UP</ButtonLogin>\r\n\r\n            </PaperLogin>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({user: state.posts.user, loading: state.posts.loading})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    login: (email, password) => dispatch(login(email, password)),\r\n    goToRegister: () => dispatch(push(routes.cadastro)),\r\n    goToFeed: () => dispatch(push(routes.root))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginPage);\r\n","import styled from 'styled-components'\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {Avatar} from '@material-ui/core';\r\nimport CommentIcon from '@material-ui/icons/Comment';\r\n\r\n\r\nexport const StyledPaper = styled(Paper)`\r\nmargin: 10px;\r\npadding: 10px;\r\ndisplay: inline-flex;\r\ncursor: pointer;\r\nmin-width: 50%;\r\nwidth: 50%;\r\n@media (max-width: 768px) {\r\n    display: flex;\r\n    justify-content: center;\r\n    width: 95%;\r\n    min-width: 95%;\r\n}\r\n`\r\nexport const WrapperTop = styled.div `\r\ndisplay: flex;\r\nflex-direction: row;\r\nmargin-bottom: 10px;\r\n`\r\nexport const WrapperBottom = styled.div `\r\ndisplay: flex;\r\nflex-direction: row;\r\nmargin-top: 10px;\r\n`\r\nexport const StyledAvatar = styled(Avatar)`\r\nwidth: 20px;\r\nheight: 20px;\r\nmargin-right: 5px;\r\n`\r\nexport const StyledCommentIcon = styled(CommentIcon)`\r\nmargin-right: 5px;\r\nfont-size: 20px;\r\n`\r\nexport const WrapperContent = styled.div `\r\nwidth: 100%;\r\n`\r\n","import styled from 'styled-components'\r\n\r\nexport const WrapperDiv = styled.div `\r\ndisplay: flex;\r\nflex-direction: column;\r\ncursor: pointer;\r\ntext-align: center;\r\nalign-content: center;\r\nalign-items: center;\r\nmargin-right: 10px;\r\n`\r\n","import React, {Component} from \"react\"\r\nimport {connect} from \"react-redux\"\r\nimport {topicVote} from \"../../actions/Actions\";\r\nimport {WrapperDiv} from './styled'\r\nimport ForwardRoundedIcon from '@material-ui/icons/ForwardRounded';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Loading from '../../components/Loading/index'\r\n\r\n\r\nclass TopicVote extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            loading: false\r\n        }\r\n    }\r\n    UNSAFE_componentWillReceiveProps() {\r\n        this.handleWhitLoading()\r\n    }\r\n    handleWhitLoading = () => {\r\n        if (this.props.loading === 'desliga') {\r\n            this.setState({loading: false})\r\n        }\r\n    };\r\n    handlewithVote = (voteValue) => {\r\n        this.setState({loading: true})\r\n        let sendValue = ''\r\n        if (this.props.userVoteDirection === voteValue) {\r\n            sendValue = 0\r\n        } else if (this.props.userVoteDirection !== voteValue) {\r\n            sendValue = voteValue\r\n        }\r\n        let vote = {\r\n            direction: sendValue\r\n        }\r\n        this.props.topicVote(this.props.topicId, vote)\r\n    }\r\n\r\n    upIcon = () => {\r\n        let colorValue = 'gray'\r\n        if (this.props.userVoteDirection === 1) {\r\n            colorValue = 'green'\r\n        }\r\n        return {transform: 'rotate(270deg)', color: colorValue}\r\n    }\r\n    downIcon = () => {\r\n        let colorValue = 'gray'\r\n        if (this.props.userVoteDirection === -1) {\r\n            colorValue = 'orange'\r\n        }\r\n        return {transform: 'rotate(90deg)', color: colorValue}\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <WrapperDiv> {\r\n                < Loading\r\n                open = {\r\n                    this.state.loading\r\n                }\r\n                />\r\n            }\r\n                <ForwardRoundedIcon onClick={\r\n                        () => {\r\n                            this.handlewithVote(1)\r\n                        }\r\n                    }\r\n                    style={\r\n                        this.upIcon()\r\n                    }/>\r\n                <Typography variant={'body1'}>\r\n                    {\r\n                    this.props.votesCount\r\n                }</Typography>\r\n                <ForwardRoundedIcon onClick={\r\n                        () => {\r\n                            this.handlewithVote(-1)\r\n                        }\r\n                    }\r\n                    style={\r\n                        this.downIcon()\r\n                    }/>\r\n            </WrapperDiv>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({loading: state.posts.loading});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    topicVote: (i, v) => dispatch(topicVote(i, v))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TopicVote)\r\n","export const calcHour = (UTCTime) => {\r\n    let text = \"\"\r\n    let fulltime = (new Date() - new Date(UTCTime)) / 1000 / 60 / 60\r\n    let inteiro = Math.trunc(fulltime)\r\n    let minutos = Math.floor((fulltime - inteiro) * 60)\r\n    let horas = 0\r\n    let dias = 0\r\n    let diasinteiro = inteiro / 24\r\n    if (diasinteiro > 1) {\r\n        dias = Math.trunc(diasinteiro)\r\n        horas = Math.floor((diasinteiro - dias) * 24)\r\n    }\r\n    if (diasinteiro < 1) {\r\n        horas = (diasinteiro) * 24\r\n    }\r\n\r\n    let datautc = new Date(UTCTime)\r\n    let diafull = datautc.getDate()\r\n    let monthfull = datautc.getMonth() + 1\r\n    let yearfull = datautc.getFullYear()\r\n\r\n    if (dias > 0) {\r\n        text = `${dias} dias, ${horas} horas e ${minutos} minutos (${diafull}/${monthfull}/${yearfull}).`\r\n    } else if (dias <= 0 && horas > 0) {\r\n        text = `${horas} horas e ${minutos} minutos (${diafull}/${monthfull}/${yearfull}).`\r\n    } else if (dias <= 0 && horas <= 0) {\r\n        text = `${minutos} minutos (${diafull}/${monthfull}/${yearfull}).`\r\n    }\r\n    return text\r\n}\r\n\r\nexport const gna = () => {\r\n    return(Math.floor(Math.random() * 9))\r\n}\r\n","import React, {Component} from \"react\";\r\nimport {\r\n    StyledPaper,\r\n    WrapperBottom,\r\n    WrapperTop,\r\n    StyledCommentIcon,\r\n    WrapperContent,\r\n    StyledAvatar\r\n} from './styled'\r\nimport TopicVote from '../TopicVote'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {connect} from \"react-redux\";\r\nimport {push} from \"connected-react-router\";\r\nimport {routes} from \"../Router/index\";\r\nimport {calcHour, gna} from '../../services/util'\r\n\r\nclass Post extends Component {\r\n\r\n    componentDidUpdate() {\r\n        const token = localStorage.getItem('token')\r\n        if (token === null) {\r\n            this.props.goToLogin()\r\n        }\r\n        calcHour(this.props.createdAt)\r\n    }\r\n\r\n    textComment = () => {\r\n        let text = 'comentarios'\r\n        if (this.props.commentsNumber === 1) {\r\n            text = 'comentario'\r\n        }\r\n        return text\r\n    }\r\n\r\n    render() {\r\n        const textData = (calcHour(this.props.createdAt))\r\n        return (\r\n            <StyledPaper>\r\n                <TopicVote key={\r\n                        this.props.id\r\n                    }\r\n                    userVoteDirection={\r\n                        this.props.userVoteDirection\r\n                    }\r\n                    topicId={\r\n                        this.props.id\r\n                    }\r\n                    votesCount={\r\n                        this.props.votesCount\r\n                    }/>\r\n                <WrapperContent onClick={\r\n                    () => {\r\n                        this.props.selectedId(this.props.id)\r\n                    }\r\n                }>\r\n                    <WrapperTop>\r\n                        <StyledAvatar src={\r\n                            `https://picsum.photos/1${\r\n                                gna()\r\n                            }${\r\n                                gna()\r\n                            }`\r\n                        }/>\r\n                        <Typography variant={'caption'}\r\n                            color={'secondary'}>\r\n                            <strong>r/categoria</strong>\r\n                            Criado por:\r\n                            <strong>u/{\r\n                                this.props.username\r\n                            }</strong>\r\n                            a {textData}</Typography>\r\n                    </WrapperTop>\r\n                    <div>\r\n                        <Typography variant={'h6'}\r\n                            color={'textPrimary'}>\r\n                            {\r\n                            this.props.title\r\n                        }</Typography>\r\n                        <Typography variant={'subtitle1'}\r\n                            color={'textPrimary'}>\r\n                            {\r\n                            this.props.text\r\n                        }</Typography>\r\n                    </div>\r\n                    <WrapperBottom>\r\n                        <StyledCommentIcon/>\r\n                        <Typography variant={'caption'}\r\n                            color={'secondary'}>\r\n                            {\r\n                            this.props.commentsNumber\r\n                        }\r\n                            {\r\n                            this.textComment()\r\n                        }</Typography>\r\n                    </WrapperBottom>\r\n                </WrapperContent>\r\n            </StyledPaper>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = state => ({});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    goToLogin: () => dispatch(push(routes.login))\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Post);\r\n","export const fieldsToForm = [\r\n    {\r\n        name: \"title\",\r\n        label: \"Titulo\",\r\n        type: \"text\",\r\n        required: true,\r\n        title: \"Título do post\"\r\n    }, {\r\n        name: \"text\",\r\n        label: \"Texto da postagem\",\r\n        type: \"text\",\r\n        required: true,\r\n        title: \"Texto descrevendo a postagem\",\r\n        multiline: true,\r\n        rows: 5\r\n    }\r\n];\r\n","import styled from \"styled-components\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nexport const StyledPaper = styled(Paper)`\r\nmargin: 10px;\r\npadding: 10px;\r\ndisplay: inline-flex;\r\nmin-width: 50%;\r\n@media (max-width: 768px) {\r\n    display: flex;\r\n    justify-content: center;\r\n    width: 95%;\r\n    min-width: 95%;\r\n}\r\n`\r\n\r\nexport const TextFieldStyled = styled(TextField)`\r\nbackground-color: #f6f7f9;\r\ndisplay: flex;  \r\njustify-content: center;\r\nalign-content: center;\r\nalign-items: center;\r\ntext-align: center;\r\nalign-self: center;\r\n`\r\nexport const WrapperDiv = styled.div `\r\ndisplay: flex;\r\njustify-content: center\r\n`\r\n","import React, {Component} from \"react\";\r\nimport {fieldsToForm} from './fieldsToForm'\r\nimport {TextFieldStyled} from './styled'\r\nimport {connect} from \"react-redux\";\r\nimport {newPost} from \"../../actions/Actions\";\r\nimport {StyledPaper} from './styled'\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Button from '@material-ui/core/Button';\r\nimport Loading from '../../components/Loading/index'\r\n\r\nclass NewPost extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            form: {},\r\n            loading: false\r\n        }\r\n    }\r\n    UNSAFE_componentWillReceiveProps() {\r\n        this.handleWhitLoading()\r\n    }\r\n    handleWhitLoading = () => {\r\n        if (this.props.loading === 'desliga') {\r\n            this.setState({loading: false})\r\n        }\r\n    };\r\n\r\n    handleInputChange = event => {\r\n        const {name, value} = event.target;\r\n        this.setState({\r\n            form: {\r\n                ...this.state.form,\r\n                [name]: value\r\n            }\r\n        });\r\n    };\r\n\r\n    handleSubmission = event => {\r\n        this.setState({loading: true})\r\n        event.preventDefault();\r\n        this.props.newPost(this.state.form)\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <StyledPaper> {\r\n                < Loading\r\n                open = {\r\n                    this.state.loading\r\n                }\r\n                />\r\n            }\r\n                <FormControl fullWidth>\r\n                    <form onSubmit={\r\n                        this.handleSubmission\r\n                    }>\r\n                        {\r\n                        fieldsToForm.map(field => {\r\n                            return (\r\n                                <TextFieldStyled variant=\"outlined\"\r\n                                    key={\r\n                                        field.name\r\n                                    }\r\n                                    id={\r\n                                        field.name\r\n                                    }\r\n                                    label={\r\n                                        field.label\r\n                                    }\r\n                                    name={\r\n                                        field.name\r\n                                    }\r\n                                    type={\r\n                                        field.type\r\n                                    }\r\n                                    onChange={\r\n                                        this.handleInputChange\r\n                                    }\r\n                                    pattern={\r\n                                        field.pattern\r\n                                    }\r\n                                    inputProps={\r\n                                        {\r\n                                            pattern: field.pattern,\r\n                                            min: field.min,\r\n                                            title: field.title\r\n                                        }\r\n                                    }\r\n                                    min={\r\n                                        field.min\r\n                                    }\r\n                                    required={\r\n                                        field.required\r\n                                    }\r\n                                    title={\r\n                                        field.title\r\n                                    }\r\n                                    value={\r\n                                        this.state.form[field.name]\r\n                                    }\r\n                                    margin={'dense'}\r\n                                    fullWidth\r\n                                    multiline={\r\n                                        field.multiline\r\n                                    }\r\n                                    rows={\r\n                                        field.rows\r\n                                    }/>\r\n                            );\r\n                        })\r\n                    }\r\n                        <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n                            Enviar\r\n                        </Button>\r\n                    </form>\r\n                </FormControl>\r\n            </StyledPaper>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({loading: state.posts.loading});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    newPost: (form) => dispatch(newPost(form))\r\n\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NewPost);\r\n","import styled from 'styled-components'\r\n\r\nexport const WrapperDiv = styled.div `\r\ndisplay: flex;\r\nflex-direction: column;\r\njustify-content: center;\r\nalign-content: center;\r\nalign-items: center;\r\n`\r\n","import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {push} from \"connected-react-router\";\r\nimport {routes} from \"../../containers/Router/index\";\r\nimport {getPosts, getPostDetail} from '../../actions/Actions'\r\nimport Post from '../Post/index'\r\nimport NewPost from '../../containers/NewPost/index'\r\nimport {WrapperDiv} from './styled'\r\nimport Loading from '../../components/Loading/index'\r\n\r\nclass Feed extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            loading: true\r\n        }\r\n    }\r\n    UNSAFE_componentWillReceiveProps() {\r\n        this.handleWhitLoading()\r\n    }\r\n    handleWhitLoading = () => {\r\n        if (this.props.loading === 'desliga') {\r\n            this.setState({loading: false})\r\n        }\r\n    };\r\n\r\n    componentDidMount() {\r\n        const token = localStorage.getItem('token')\r\n        if (token === null) {\r\n            this.props.goToLogin()\r\n        }\r\n        this.props.getPosts()\r\n    }\r\n    componentDidUpdate() {\r\n        const token = localStorage.getItem('token')\r\n        if (token === null) {\r\n            this.props.goToLogin()\r\n        }\r\n    }\r\n    handleWhitSelect = (event) => {\r\n        this.setState({loading: true})\r\n        this.props.getPostDetail(event)\r\n        this.props.goToPostDetail()\r\n\r\n    };\r\n    render() {\r\n        let newdata = [...this.props.posts]\r\n        let searchResults = newdata.filter(post => post.title.toLowerCase().includes(this.props.searchTerms.toLowerCase()) || post.text.toLowerCase().includes(this.props.searchTerms.toLowerCase()))\r\n\r\n        let postDataFull = (this.props.posts && this.props.posts.map((item) => (\r\n            <Post key={\r\n                    item.id\r\n                }\r\n                votesCount={\r\n                    item.votesCount\r\n                }\r\n                userVoteDirection={\r\n                    item.userVoteDirection\r\n                }\r\n                commentsNumber={\r\n                    item.commentsNumber\r\n                }\r\n                id={\r\n                    item.id\r\n                }\r\n                username={\r\n                    item.username\r\n                }\r\n                text={\r\n                    item.text\r\n                }\r\n                createdAt={\r\n                    item.createdAt\r\n                }\r\n                title={\r\n                    item.title\r\n                }\r\n                selectedId={\r\n                    this.handleWhitSelect\r\n                }/>\r\n        )))\r\n        let postDataSearch = (this.props.posts && searchResults.map((item) => (\r\n            <Post key={\r\n                    item.id\r\n                }\r\n                votesCount={\r\n                    item.votesCount\r\n                }\r\n                userVoteDirection={\r\n                    item.userVoteDirection\r\n                }\r\n                commentsNumber={\r\n                    item.commentsNumber\r\n                }\r\n                id={\r\n                    item.id\r\n                }\r\n                username={\r\n                    item.username\r\n                }\r\n                text={\r\n                    item.text\r\n                }\r\n                createdAt={\r\n                    item.createdAt\r\n                }\r\n                title={\r\n                    item.title\r\n                }\r\n                selectedId={\r\n                    this.handleWhitSelect\r\n                }/>\r\n        )))\r\n\r\n        return (\r\n            <WrapperDiv> {\r\n                < Loading\r\n                open = {\r\n                    this.state.loading\r\n                }\r\n                />\r\n            }\r\n                {\r\n                < NewPost />\r\n            }\r\n                {\r\n                this.props.searchTerms.length > 0 ? postDataSearch : postDataFull\r\n            } </WrapperDiv>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    posts: state.posts.posts,\r\n    postComments: state.posts.postComments,\r\n    user: state.posts.user,\r\n    loading: state.posts.loading,\r\n    searchTerms: state.posts.searchTerms\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    goToLogin: () => dispatch(push(routes.login)),\r\n    goToPostDetail: () => dispatch(push(routes.postdetails)),\r\n    getPosts: () => dispatch(getPosts()),\r\n    getPostDetail: (id) => dispatch(getPostDetail(id))\r\n\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Feed);\r\n","import styled from \"styled-components\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nexport const PaperLogin = styled(Paper)`\r\ndisplay: flex;\r\nflex-direction: column;\r\nalign-items: center;\r\nwidth: 40vw;\r\nheight: 80vh;\r\nmargin-left: 25vw;\r\npadding:30px;\r\n@media (max-width: 768px) {\r\n    flex-direction: column;\r\n    margin-bottom: 2px;\r\n    height: 95vh;\r\n    width: 95%;\r\n    margin-left: 10px;\r\n}\r\n`\r\n\r\nexport const WrapperDiv = styled.div `\r\ndisplay: flex;\r\nflex-direction: row;\r\njustify-content: center;\r\ntext-align: center;\r\nalign-content: center;\r\nalign-items: center;\r\n`\r\n\r\nexport const TextFieldLogin = styled(TextField)`\r\nwidth:30vw;\r\nmargin: 20px;\r\n@media (max-width: 768px) {\r\n    display:flex;\r\n    flex-direction: column;\r\n    width: 80vw;\r\n    height:10vh;\r\n}\r\n`\r\nexport const ButtonLogin = styled(Button)`\r\nwidth: 10vw;\r\n@media (max-width: 768px) {\r\n    flex-direction: column;\r\n    margin-bottom: 30px;\r\n}\r\n`\r\nexport const WrapperInputs = styled.div `\r\ndisplay: flex;\r\nflex-direction: column;\r\njustify-content: center;\r\ntext-align: center;\r\nalign-content: center;\r\nalign-items: center;\r\n\r\n@media (max-width: 768px) {\r\n    flex-direction: column;\r\n    margin-bottom: 2px;\r\n    margin-left: 1px;\r\n}\r\n`\r\n\r\nexport const TypographyLogin = styled(Typography)`\r\nmargin: o auto;\r\n`\r\nexport const WrapperIcon = styled.div `\r\nbackground-color: darkorange;\r\npadding: 10px;\r\nborder-radius: 50%;\r\nwidth: auto;\r\nheight: width;\r\nmargin: 20px;\r\n`\r\n","import React, {Component} from \"react\"\r\nimport {connect} from \"react-redux\"\r\nimport {push} from \"connected-react-router\";\r\nimport {routes} from \"../../containers/Router/index\";\r\nimport {newRegister} from \"../../actions/Actions\"\r\nimport {TextFieldLogin, PaperLogin, WrapperInputs, WrapperIcon, TypographyLogin, ButtonLogin} from './styled'\r\nimport RedditIcon from '@material-ui/icons/Reddit';\r\nimport Loading from '../../components/Loading/index'\r\n\r\n\r\nconst userRegister = [\r\n    {\r\n        name: 'username',\r\n        label: 'Digite seu Nome',\r\n        type: 'text',\r\n        pattern: '[a-zA-Z]{3,}',\r\n        title: 'nome do usuário com no mínimo 3 letras'\r\n    }, {\r\n        name: 'email',\r\n        label: 'Digite seu email',\r\n        type: 'email',\r\n        title: 'email completo do usuário'\r\n    }, {\r\n        name: 'password',\r\n        label: 'Crie uma senha',\r\n        type: 'password',\r\n        pattern: '{5,}',\r\n        title: 'nova senha com no mínimo 5 digitos'\r\n    }\r\n]\r\n\r\nclass Register extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            form: {},\r\n            loading: false\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps() {\r\n        this.handleWhitLoading()\r\n    }\r\n    handleWhitLoading = () => {\r\n        if (this.props.loading === 'desliga') {\r\n            this.setState({loading: false})\r\n        }\r\n    };\r\n\r\n    handleInputnewUser = event => {\r\n        const {name, value} = event.target;\r\n        this.setState({\r\n            form: {\r\n                ...this.state.form,\r\n                [name]: value\r\n            }\r\n        })\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        const token = localStorage.getItem(\"token\")\r\n        if (token !== null) {\r\n            this.props.goToFeed();\r\n        }\r\n    }\r\n\r\n\r\n    handleOnSubmit = event => {\r\n        this.setState({loading: true})\r\n        event.preventDefault();\r\n        this.props.newRegister(this.state.form);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <PaperLogin> {\r\n                < Loading\r\n                open = {\r\n                    this.state.loading\r\n                }\r\n                />\r\n            }\r\n                <WrapperIcon>\r\n                    <RedditIcon fontSize={'large'}/>\r\n                </WrapperIcon>\r\n                <TypographyLogin variant=\"h3\" color='primary'>Bem vindo ao 4eddit</TypographyLogin>\r\n                <form onSubmit={\r\n                    this.handleOnSubmit\r\n                }>\r\n                    {\r\n                    userRegister.map(field => {\r\n                        return (\r\n                            <WrapperInputs>\r\n                                <TextFieldLogin variant=\"outlined\"\r\n                                    label={\r\n                                        field.label\r\n                                    }\r\n                                    name={\r\n                                        field.name\r\n                                    }\r\n                                    type={\r\n                                        field.type\r\n                                    }\r\n                                    value={\r\n                                        this.state.form[field.name]\r\n                                    }\r\n                                    required={\r\n                                        field.required\r\n                                    }\r\n                                    onChange={\r\n                                        this.handleInputnewUser\r\n                                    }\r\n                                    title={\r\n                                        field.title\r\n                                    }/>\r\n                            </WrapperInputs>\r\n                        )\r\n                    })\r\n                }\r\n                    <WrapperInputs>\r\n                        <ButtonLogin type=\"submit\" variant=\"contained\" color=\"primary\">Cadastrar</ButtonLogin>\r\n                    </WrapperInputs>\r\n                </form>\r\n            </PaperLogin>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({user: state.posts.user, loading: state.posts.loading})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    goToFeed: () => dispatch(push(routes.root)),\r\n    newRegister: (form) => dispatch(newRegister(form))\r\n})\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Register)\r\n","import styled from 'styled-components'\r\n\r\nexport const WrapperDiv = styled.div `\r\ndisplay: flex;\r\nflex-direction: column;\r\ncursor: pointer;\r\njustify-content: flex-start;\r\ntext-align: center;\r\nalign-content: center;\r\nalign-items: center;\r\n`\r\n","import React, {Component} from \"react\"\r\nimport {connect} from \"react-redux\"\r\nimport {commentVote} from \"../../actions/Actions\";\r\nimport {WrapperDiv} from './styled'\r\nimport ForwardRoundedIcon from '@material-ui/icons/ForwardRounded';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Loading from '../../components/Loading/index'\r\n\r\n\r\nclass CommentVote extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            loading: false\r\n        }\r\n    }\r\n    componentWillReceiveProps() {\r\n        this.handleWhitLoading()\r\n    }\r\n    handleWhitLoading = () => {\r\n        if (this.props.loading === 'desliga') {\r\n            this.setState({loading: false})\r\n        }\r\n    };\r\n\r\n    handlewithVote = (voteValue) => {\r\n        this.setState({loading: true})\r\n        let sendValue = ''\r\n        if (this.props.userVoteDirection === voteValue) {\r\n            sendValue = 0\r\n        } else if (this.props.userVoteDirection !== voteValue) {\r\n            sendValue = voteValue\r\n        }\r\n        let vote = {\r\n            direction: sendValue\r\n        }\r\n        this.props.commentVote(this.props.topicId, vote, this.props.commentId)\r\n    }\r\n\r\n    upIcon = () => {\r\n        let colorValue = 'gray'\r\n        if (this.props.userVoteDirection === 1) {\r\n            colorValue = 'green'\r\n        }\r\n        return {transform: 'rotate(270deg)', color: colorValue}\r\n    }\r\n    downIcon = () => {\r\n        let colorValue = 'gray'\r\n        if (this.props.userVoteDirection === -1) {\r\n            colorValue = 'orange'\r\n        }\r\n        return {transform: 'rotate(90deg)', color: colorValue}\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <WrapperDiv> {\r\n                < Loading\r\n                open = {\r\n                    this.state.loading\r\n                }\r\n                />\r\n            }\r\n                <ForwardRoundedIcon onClick={\r\n                        () => {\r\n                            this.handlewithVote(1)\r\n                        }\r\n                    }\r\n                    style={\r\n                        this.upIcon()\r\n                    }/>\r\n                <Typography variant={'body1'}>\r\n                    {\r\n                    this.props.votesCount\r\n                }</Typography>\r\n                <ForwardRoundedIcon onClick={\r\n                        () => {\r\n                            this.handlewithVote(-1)\r\n                        }\r\n                    }\r\n                    style={\r\n                        this.downIcon()\r\n                    }/>\r\n            </WrapperDiv>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({loading: state.posts.loading});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    commentVote: (ti, v, ci) => dispatch(commentVote(ti, v, ci))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CommentVote)\r\n","import styled from 'styled-components'\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {Avatar} from '@material-ui/core';\r\nimport CommentIcon from '@material-ui/icons/Comment';\r\n\r\nexport const WrapperDiv = styled.div `\r\ndisplay: flex;\r\njustify-content: space-between;\r\npadding: 10px;\r\n`\r\nexport const StyledPaper = styled(Paper)`\r\nmargin: 10px;\r\npadding: 10px;\r\ndisplay: inline-flex;\r\nmin-width: 50%;\r\nwidth: 50%;\r\n@media (max-width: 768px) {\r\n    display: flex;\r\n    justify-content: center;\r\n    width: 95%;\r\n    min-width: 95%;\r\n}\r\n`\r\nexport const WrapperTop = styled.div `\r\ndisplay: flex;\r\nflex-direction: row;\r\nmargin-bottom: 10px;\r\n`\r\nexport const StyledAvatar = styled(Avatar)`\r\nwidth: 20px;\r\nheight: 20px;\r\nmargin-right: 5px;\r\n`\r\nexport const StyledCommentIcon = styled(CommentIcon)`\r\nmargin-right: 5px;\r\nfont-size: 15px;\r\n`\r\nexport const WrapperContent = styled.div `\r\nwidth: 100%;\r\n`\r\nexport const WrapperVote = styled.div `\r\ndisplay: flex;\r\njustify-content: flex-start;\r\n`\r\n","import React, {Component} from \"react\";\r\nimport CommentVote from '../../containers/CommentVote/index'\r\nimport {StyledPaper, WrapperTop, WrapperContent, WrapperVote} from './styled'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {calcHour} from '../../services/util'\r\n\r\nclass Comments extends Component {\r\n\r\n    render() {\r\n        const textData = (calcHour(this.props.createdAt))\r\n        return (\r\n            <StyledPaper>\r\n                <WrapperVote>\r\n                    <CommentVote commentId={\r\n                            this.props.id\r\n                        }\r\n                        votesCount={\r\n                            this.props.votesCount\r\n                        }\r\n                        userVoteDirection={\r\n                            this.props.userVoteDirection\r\n                        }\r\n                        topicId={\r\n                            this.props.topicId\r\n                        }/>\r\n                </WrapperVote>\r\n                <WrapperContent>\r\n                    <WrapperTop>\r\n                        <Typography variant={'caption'}\r\n                            color={'secondary'}>Comentado por\r\n                            <strong> {\r\n                                this.props.username\r\n                            }</strong>\r\n                            a {textData} </Typography>\r\n                    </WrapperTop>\r\n                    <div>\r\n                        <Typography variant={'subtitle2'}\r\n                            color={'textPrimary'}>\r\n                            {\r\n                            this.props.text\r\n                        }</Typography>\r\n                    </div>\r\n                </WrapperContent>\r\n            </StyledPaper>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Comments\r\n","import styled from \"styled-components\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nexport const StyledPaper = styled(Paper)`\r\nmargin: 10px;\r\npadding: 10px;\r\ndisplay: inline-flex;\r\nmin-width: 50%;\r\nwidth: 50%;\r\n@media (max-width: 768px) {\r\n    display: flex;\r\n    justify-content: center;\r\n    width: 95%;\r\n    min-width: 95%;\r\n}\r\n`\r\n\r\nexport const TextFieldStyled = styled(TextField)`\r\nbackground-color: #f6f7f9;\r\ndisplay: flex;  \r\njustify-content: center;\r\nalign-content: center;\r\nalign-items: center;\r\ntext-align: center;\r\nalign-self: center;\r\n`\r\nexport const WrapperDiv = styled.div `\r\ndisplay: flex;\r\njustify-content: center\r\n`\r\n","import React, {Component} from \"react\"\r\nimport {connect} from \"react-redux\"\r\nimport {push} from \"connected-react-router\";\r\nimport {routes} from \"../Router/index\";\r\nimport {newComment} from \"../../actions/Actions\"\r\nimport {TextFieldStyled, StyledPaper} from './styled'\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Button from '@material-ui/core/Button';\r\nimport Loading from '../../components/Loading/index'\r\n\r\n\r\nconst formData = [{\r\n        name: 'text',\r\n        label: 'Novo comentário',\r\n        type: 'text',\r\n        multiline: true,\r\n        rows: 3,\r\n        title: 'Escreva um novo comentário'\r\n    }]\r\n\r\nclass NewComment extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            form: {},\r\n            loading: false\r\n        }\r\n    }\r\n    UNSAFE_componentWillReceiveProps() {\r\n        this.handleWhitLoading()\r\n    }\r\n    handleWhitLoading = () => {\r\n        if (this.props.loading === 'desliga') {\r\n            this.setState({loading: false})\r\n        }\r\n    };\r\n\r\n    handleInputChange = event => {\r\n        const {name, value} = event.target;\r\n        this.setState({\r\n            form: {\r\n                ...this.state.form,\r\n                [name]: value\r\n            }\r\n        });\r\n    };\r\n\r\n    handleOnSubmit = event => {\r\n        this.setState({loading: true})\r\n        event.preventDefault();\r\n        this.props.newComment(this.props.id, this.state.form);\r\n        console.log(\"teste \")\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <StyledPaper> {\r\n                < Loading\r\n                open = {\r\n                    this.state.loading\r\n                }\r\n                />\r\n            }\r\n                <FormControl fullWidth>\r\n                    <form onSubmit={\r\n                        this.handleOnSubmit\r\n                    }>\r\n                        {\r\n                        formData.map(field => {\r\n                            return (\r\n                                <TextFieldStyled variant=\"outlined\"\r\n                                    key={\r\n                                        this.props.id\r\n                                    }\r\n                                    label={\r\n                                        field.label\r\n                                    }\r\n                                    name={\r\n                                        field.name\r\n                                    }\r\n                                    type={\r\n                                        field.type\r\n                                    }\r\n                                    value={\r\n                                        this.state.form[field.name]\r\n                                    }\r\n                                    required={\r\n                                        field.required\r\n                                    }\r\n                                    multiline={\r\n                                        field.multiline\r\n                                    }\r\n                                    rows={\r\n                                        field.rows\r\n                                    }\r\n                                    fullWidth\r\n                                    onChange={\r\n                                        this.handleInputChange\r\n                                    }\r\n                                    title={\r\n                                        field.title\r\n                                    }/>\r\n                            )\r\n                        })\r\n                    }\r\n                        <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n                            Comentar\r\n                        </Button>\r\n                    </form>\r\n                </FormControl>\r\n            </StyledPaper>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({user: state.posts.user, loading: state.posts.loading})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    goToFeed: () => dispatch(push(routes.root)),\r\n    newComment: (id, form) => dispatch(newComment(id, form))\r\n})\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NewComment)\r\n","import styled from 'styled-components'\r\nimport Paper from '@material-ui/core/Paper';\r\nimport {Avatar} from '@material-ui/core';\r\nimport CommentIcon from '@material-ui/icons/Comment';\r\n\r\nexport const WrapperDiv = styled.div `\r\ndisplay: flex;\r\nflex-direction: column;\r\njustify-content: center;\r\nalign-content: center;\r\nalign-items: center;\r\n`\r\nexport const StyledPaper = styled(Paper)`\r\nmargin: 10px;\r\npadding: 10px;\r\ndisplay: inline-flex;\r\nmin-width: 50%;\r\nwidth: 50%;\r\n@media (max-width: 768px) {\r\n    display: flex;\r\n    justify-content: center;\r\n    width: 95%;\r\n    min-width: 95%;\r\n}\r\n`\r\nexport const WrapperTop = styled.div `\r\ndisplay: flex;\r\nflex-direction: row;\r\nmargin-bottom: 10px;\r\n`\r\nexport const WrapperBottom = styled.div `\r\ndisplay: flex;\r\nflex-direction: row;\r\nmargin-top: 10px;\r\n`\r\nexport const StyledAvatar = styled(Avatar)`\r\nwidth: 20px;\r\nheight: 20px;\r\nmargin-right: 5px;\r\n`\r\nexport const StyledCommentIcon = styled(CommentIcon)`\r\nmargin-right: 5px;\r\nfont-size: 15px;\r\n`\r\nexport const WrapperContent = styled.div `\r\nwidth: 100%;\r\n`\r\n","import React, {Component} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport Comments from '../../components/Comments/index'\r\nimport NewComment from \"../NewComment/index\"\r\nimport Post from '../Post/index'\r\nimport {WrapperDiv} from './styled'\r\nimport {push} from \"connected-react-router\";\r\nimport {routes} from \"../Router/index\";\r\nimport Loading from '../../components/Loading/index'\r\n\r\n\r\nclass PostDetail extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            loading: true\r\n        }\r\n    }\r\n    UNSAFE_componentWillReceiveProps() {\r\n        this.handleWhitLoading()\r\n    }\r\n    handleWhitLoading = () => {\r\n        if (this.props.loading === 'desliga') {\r\n            this.setState({loading: false})\r\n        }\r\n    };\r\n\r\n    textComment = () => {\r\n        let text = 'comentarios'\r\n        if (this.props.commentsNumber === 1) {\r\n            text = 'comentario'\r\n        }\r\n        return text\r\n    }\r\n\r\n    gna = () => {\r\n        return(Math.floor(Math.random() * 9))\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        const token = localStorage.getItem('token')\r\n        if (token === null) {\r\n            this.props.goToLogin()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const post = {\r\n            ...this.props.postDetail\r\n        }\r\n\r\n        return (\r\n            <WrapperDiv> {\r\n                < Loading\r\n                open = {\r\n                    this.state.loading\r\n                }\r\n                />\r\n            }\r\n                <Post key={\r\n                        post.id\r\n                    }\r\n                    votesCount={\r\n                        post.votesCount\r\n                    }\r\n                    userVoteDirection={\r\n                        post.userVoteDirection\r\n                    }\r\n                    commentsNumber={\r\n                        post.commentsNumber\r\n                    }\r\n                    id={\r\n                        post.id\r\n                    }\r\n                    username={\r\n                        post.username\r\n                    }\r\n                    text={\r\n                        post.text\r\n                    }\r\n                    createdAt={\r\n                        post.createdAt\r\n                    }\r\n                    title={\r\n                        post.title\r\n                    }\r\n                    selectedId={\r\n                        () => {\r\n                            console.log(post.id)\r\n                        }\r\n                    }/>\r\n                <NewComment id={\r\n                    post.id\r\n                }/> {\r\n                this.props.postDetail && this.props.postDetail.comments.map((item) => (\r\n                    <Comments key={\r\n                            item.id\r\n                        }\r\n                        votesCount={\r\n                            item.votesCount\r\n                        }\r\n                        userVoteDirection={\r\n                            item.userVoteDirection\r\n                        }\r\n                        id={\r\n                            item.id\r\n                        }\r\n                        username={\r\n                            item.username\r\n                        }\r\n                        text={\r\n                            item.text\r\n                        }\r\n                        createdAt={\r\n                            item.createdAt\r\n                        }\r\n                        topicId={\r\n                            post.id\r\n                        }/>\r\n                ))\r\n            } </WrapperDiv>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({postDetail: state.posts.postDetail, user: state.posts.user, loading: state.posts.loading});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    goToLogin: () => dispatch(push(routes.login))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PostDetail);\r\n","import React from \"react\";\r\nimport {ConnectedRouter} from \"connected-react-router\";\r\nimport {Switch, Route} from \"react-router-dom\";\r\nimport LoginPage from \"../LoginPage/index\";\r\nimport Feed from \"../Feed/index\";\r\nimport Register from \"../Register/Register\";\r\nimport PostDetail from '../PostDetail/index'\r\n\r\nexport const routes = {\r\n    root: \"/\",\r\n    login: \"/login\",\r\n    cadastro: \"/register\",\r\n    postdetails: \"/details\",\r\n\r\n    // Outras rotas aqui\r\n};\r\n\r\nfunction Router(props) {\r\n    return (\r\n        <ConnectedRouter history={\r\n            props.history\r\n        }>\r\n            <Switch>\r\n                <Route exact\r\n                    path={\r\n                        routes.root\r\n                    }\r\n                    component={Feed}/>\r\n                <Route exact\r\n                    path={\r\n                        routes.login\r\n                    }\r\n                    component={LoginPage}/>\r\n                <Route exact\r\n                    path={\r\n                        routes.cadastro\r\n                    }\r\n                    component={Register}/>\r\n                <Route exact\r\n                    path={\r\n                        routes.postdetails\r\n                    }\r\n                    component={PostDetail}/>\r\n            </Switch>\r\n        </ConnectedRouter>\r\n    );\r\n}\r\n\r\nexport default Router;\r\n","const initialState = {\r\n    posts: [],\r\n    user: [],\r\n    postDetail: null,\r\n    postComments: null,\r\n    topicVote: null,\r\n    loading: '',\r\n    searchTerms: ''\r\n}\r\n\r\nconst posts = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'SET_POSTS':\r\n            return {\r\n                ...state,\r\n                posts: action.payload.posts.posts\r\n            }\r\n        case 'SET_USER':\r\n            return {\r\n                ...state,\r\n                user: action.payload.userData\r\n            }\r\n        case 'NEW_USER':\r\n            return {\r\n                ...state,\r\n                newUser: action.payload.newUserData\r\n            }\r\n        case 'SET_LOGOUT':\r\n            return {\r\n                ...state,\r\n                user: []\r\n            }\r\n        case 'SET_POST_DETAIL':\r\n            return {\r\n                ...state,\r\n                postDetail: action.payload.post,\r\n                postComments: action.payload.post.comments\r\n            }\r\n        case 'SET_LOADING_OFF':\r\n            return {\r\n                ...state,\r\n                loading: 'desliga'\r\n            }\r\n        case 'SET_LOADING_FREE':\r\n            return {\r\n                ...state,\r\n                loading: ''\r\n            }\r\n        case 'SET_SEARCH':\r\n            return {\r\n                ...state,\r\n                searchTerms: action.payload.terms\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default posts\r\n","import styled from 'styled-components'\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n\r\nexport const WrapperDiv = styled.div `\r\ndisplay: flex;\r\nflex-direction: row;\r\njustify-content: center;\r\ntext-align: center;\r\nalign-content: center;\r\nalign-items: center;\r\n`\r\nexport const StyledAppBar = styled(AppBar)`\r\ndisplay: flex;\r\nflex-direction: row;\r\njustify-content: space-between;\r\nbackground-color: white;\r\nmargin-bottom: 20px;\r\n@media (max-width: 768px) {\r\n    flex-direction: column;\r\n    margin-bottom: 5px;\r\n}\r\n`\r\nexport const WrapperIcon = styled.div `\r\nbackground-color: darkorange;\r\npadding: 10px;\r\nborder-radius: 50%;\r\nwidth: auto;\r\nheight: width;\r\nmargin: 20px;\r\n@media (max-width: 768px) {\r\n    margin: 10px;\r\n}\r\n`\r\nexport const WrapperDivLogo = styled.div `\r\ndisplay: flex;\r\nflex-direction: column;\r\njustify-content: center;\r\ntext-align: center;\r\nalign-content: center;\r\nalign-items: center;\r\ncursor: pointer\r\n`\r\nexport const WrapperUserData = styled.div `\r\ndisplay: flex;\r\nflex-direction: row;\r\nalign-items: center;\r\nmargin: 5px;\r\n@media (max-width: 768px) {\r\n    visibility: hidden;\r\n    max-height: 0;\r\n}\r\n`\r\nexport const StyledTextField = styled(TextField)`\r\nbackground-color: #f6f7f9;\r\nalign-self: center;\r\n`\r\n","import {combineReducers} from \"redux\";\r\nimport {connectRouter} from \"connected-react-router\";\r\nimport posts from './posts'\r\n\r\nexport const generateReducers = history => combineReducers({\r\n    router: connectRouter(history), \r\n    posts\r\n    // Outros reducers aqui\r\n});\r\n","import React, {Component} from \"react\";\r\nimport {WrapperDiv} from './styled'\r\nimport {connect} from \"react-redux\";\r\nimport {setLogout, setSearch, setUser} from '../../actions/Actions'\r\nimport {\r\n    StyledAppBar,\r\n    WrapperDivLogo,\r\n    WrapperIcon,\r\n    WrapperUserData,\r\n    StyledTextField\r\n} from './styled'\r\nimport RedditIcon from '@material-ui/icons/Reddit';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport {push} from \"connected-react-router\";\r\nimport {routes} from \"../../containers/Router/index\";\r\n\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            form: {\r\n                searchTerms: \"\"\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const existUser = JSON.parse(localStorage.getItem('user'))\r\n        if (existUser !== null) {\r\n            this.props.setUser(existUser)\r\n        }\r\n    }\r\n\r\n    handleInputChange = event => {\r\n        const {value} = event.target;\r\n        this.setState({\r\n            form: {\r\n                ...this.state.form,\r\n                searchTerms: value\r\n            }\r\n        })\r\n        this.props.setSearch(this.state.form.searchTerms)\r\n    };\r\n\r\n    render() {\r\n        const userdata = (\r\n            <WrapperUserData>\r\n                <WrapperUserData>\r\n                    <Button variant=\"outlined\"\r\n                        size={'small'}\r\n                        color=\"primary\"\r\n                        onClick={\r\n                            this.props.setLogout\r\n                    }>Logout</Button>\r\n                </WrapperUserData>\r\n                <div>\r\n                    <Typography variant={'subtitle2'}\r\n                        color={'textPrimary'}>User: {\r\n                        this.props.user === null ? \"\" : this.props.user.username\r\n                    }</Typography>\r\n                    <Typography variant={'subtitle2'}\r\n                        color={'textPrimary'}>Email: {\r\n                        this.props.user === null ? \"\" : this.props.user.email\r\n                    }</Typography>\r\n                </div>\r\n            </WrapperUserData>\r\n        )\r\n        const logodata = (\r\n            <WrapperDiv onClick={\r\n                this.props.goToFeed\r\n            }>\r\n                <WrapperIcon>\r\n                    <RedditIcon fontSize={'large'}/>\r\n                </WrapperIcon>\r\n                <WrapperDivLogo>\r\n                    <Typography variant={'h5'}\r\n                        color={'textPrimary'}>4eddit</Typography>\r\n                    <Typography variant={'subtitle2'}\r\n                        color={'textPrimary'}>Turma 2 - Sagan</Typography>\r\n                </WrapperDivLogo>\r\n            </WrapperDiv>\r\n        )\r\n        const searchdata = (\r\n            <WrapperDiv>\r\n                <StyledTextField placeholder=\"Search\" variant=\"outlined\"\r\n                    value={\r\n                        this.state.searchTerms\r\n                    }\r\n                    onChange={\r\n                        this.handleInputChange\r\n                    }\r\n                    InputProps={\r\n                        {\r\n                            startAdornment: (\r\n                                <InputAdornment position=\"start\">\r\n                                    <SearchIcon/>\r\n                                </InputAdornment>\r\n                            )\r\n                        }\r\n                    }/>\r\n            </WrapperDiv>\r\n        )\r\n        return (\r\n            <StyledAppBar position={'relative'}\r\n                elevation={0}>\r\n                {\r\n                this.props.user.length === 0 ? \"\" : logodata\r\n            }\r\n                {\r\n                this.props.user.length === 0 ? \"\" : searchdata\r\n            }\r\n                {\r\n                this.props.user.length === 0 ? \"\" : userdata\r\n            } </StyledAppBar>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({user: state.posts.user});\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    setLogout: () => dispatch(setLogout()),\r\n    setUser: (data) => dispatch(setUser(data)),\r\n    setSearch: (terms) => dispatch(setSearch(terms)),\r\n    goToFeed: () => dispatch(push(routes.root))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\r\n","import React from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { MuiThemeProvider, CssBaseline } from \"@material-ui/core\";\r\nimport theme from \"../../style/theme\";\r\nimport Router from \"../Router\";\r\nimport { createBrowserHistory } from \"history\";\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\nimport { generateReducers } from \"../../reducers\";\r\nimport { routerMiddleware } from \"connected-react-router\";\r\nimport Header from '../Header/index'\r\n\r\nexport const history = createBrowserHistory();\r\n\r\nconst middlewares = [\r\n  applyMiddleware(routerMiddleware(history), thunk),\r\n  window.__REDUX_DEVTOOLS_EXTENSION__\r\n    ? window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    : f => f\r\n];\r\n\r\nconst store = createStore(generateReducers(history), compose(...middlewares));\r\n\r\nexport const App = () => (\r\n  <Provider store={store}>\r\n    <MuiThemeProvider theme={theme}>\r\n      <CssBaseline />\r\n      <Header />\r\n      <Router history={history} />\r\n    </MuiThemeProvider>\r\n  </Provider>\r\n);\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./containers/App\";\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(<App />, rootElement);\r\n"],"sourceRoot":""}