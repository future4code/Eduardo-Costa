{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\Eduardo\\\\Documents\\\\gitlocal\\\\Eduardo-Costa\\\\semana 12\\\\aula41\\\\planner\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Eduardo\\\\Documents\\\\gitlocal\\\\Eduardo-Costa\\\\semana 12\\\\aula41\\\\planner\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\nconst baseUrl = 'https://us-central1-missao-newton.cloudfunctions.net/generic/planner-sagan-eduardoteste';\nexport const createNewTask = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(nameData, dayData) {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return axios.post(\"\".concat(baseUrl), {\n            text: nameData,\n            day: dayData\n          });\n\n        case 3:\n          response = _context.sent;\n          console.log(response);\n          console.log(response.data);\n          _context.next = 11;\n          break;\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(\"erro: \".concat(_context.t0));\n\n        case 11:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee, null, [[0, 8]]);\n  }));\n\n  return function createNewTask(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport const getTasks = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return axios.get(\"\".concat(baseUrl));\n\n        case 3:\n          response = _context2.sent;\n          console.log(response.data);\n          _context2.next = 10;\n          break;\n\n        case 7:\n          _context2.prev = 7;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.log(\"erro: \".concat(_context2.t0));\n\n        case 10:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2, null, [[0, 7]]);\n  }));\n\n  return function getTasks() {\n    return _ref2.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["C:/Users/Eduardo/Documents/gitlocal/Eduardo-Costa/semana 12/aula41/planner/src/actions/actions.js"],"names":["axios","baseUrl","createNewTask","nameData","dayData","post","text","day","response","console","log","data","getTasks","get"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,MAAMC,OAAO,GAAG,yFAAhB;AAEA,OAAO,MAAMC,aAAa;AAAA,sEAAG,iBAAOC,QAAP,EAAiBC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAEEJ,KAAK,CAACK,IAAN,WAAcJ,OAAd,GAAyB;AAC5CK,YAAAA,IAAI,EAAEH,QADsC;AAE5CI,YAAAA,GAAG,EAAEH;AAFuC,WAAzB,CAFF;;AAAA;AAEfI,UAAAA,QAFe;AAMrBC,UAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AAPqB;AAAA;;AAAA;AAAA;AAAA;AASzBF,UAAAA,OAAO,CAACC,GAAR;;AATyB;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAbR,aAAa;AAAA;AAAA;AAAA,GAAnB;AAaP,OAAO,MAAMU,QAAQ;AAAA,uEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAEOZ,KAAK,CAACa,GAAN,WAAaZ,OAAb,EAFP;;AAAA;AAEVO,UAAAA,QAFU;AAGhBC,UAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AAHgB;AAAA;;AAAA;AAAA;AAAA;AAKpBF,UAAAA,OAAO,CAACC,GAAR;;AALoB;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAARE,QAAQ;AAAA;AAAA;AAAA,GAAd","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = 'https://us-central1-missao-newton.cloudfunctions.net/generic/planner-sagan-eduardoteste'\r\n\r\nexport const createNewTask = async (nameData, dayData) => {\r\n    try {\r\n        const response = await axios.post(`${baseUrl}`, {\r\n            text: nameData,\r\n            day: dayData\r\n        });\r\n        console.log(response)\r\n        console.log(response.data)\r\n    } catch (error) {\r\n    console.log(`erro: ${error}`)\r\n    }\r\n}\r\n\r\nexport const getTasks = async () => {\r\n    try {\r\n        const response = await axios.get(`${baseUrl}`);\r\n        console.log(response.data)\r\n    } catch (error) {\r\n    console.log(`erro: ${error}`)\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}