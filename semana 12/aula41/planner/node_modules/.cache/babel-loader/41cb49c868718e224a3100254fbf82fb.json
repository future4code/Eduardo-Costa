{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\Eduardo\\\\Documents\\\\gitlocal\\\\Eduardo-Costa\\\\semana 12\\\\aula41\\\\planner\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Eduardo\\\\Documents\\\\gitlocal\\\\Eduardo-Costa\\\\semana 12\\\\aula41\\\\planner\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\nconst baseUrl = 'https://us-central1-missao-newton.cloudfunctions.net/generic/planner-sagan-eduardoteste2';\nexport const createNewTask = (nameData, dayData) => /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          console.log(nameData, dayData);\n          _context.next = 4;\n          return axios.post(\"\".concat(baseUrl), {\n            text: nameData,\n            day: dayData\n          });\n\n        case 4:\n          response = _context.sent;\n          dispatch(getTasks());\n          _context.next = 11;\n          break;\n\n        case 8:\n          _context.prev = 8;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(\"erro: \".concat(_context.t0));\n\n        case 11:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee, null, [[0, 8]]);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nconst setTasks = data => ({\n  type: 'SET_TASK_LIST',\n  payload: {\n    data\n  }\n});\n\nexport const getTasks = () => /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch) {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return axios.get(\"\".concat(baseUrl));\n\n        case 3:\n          response = _context2.sent;\n          dispatch(setTasks(response.data));\n          _context2.next = 10;\n          break;\n\n        case 7:\n          _context2.prev = 7;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.log(\"erro: \".concat(_context2.t0));\n\n        case 10:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2, null, [[0, 7]]);\n  }));\n\n  return function (_x2) {\n    return _ref2.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["C:/Users/Eduardo/Documents/gitlocal/Eduardo-Costa/semana 12/aula41/planner/src/actions/Actions.js"],"names":["axios","baseUrl","createNewTask","nameData","dayData","dispatch","console","log","post","text","day","response","getTasks","setTasks","data","type","payload","get"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,OAAO,GAAG,0FAAhB;AAEA,OAAO,MAAMC,aAAa,GAAG,CAACC,QAAD,EAAWC,OAAX;AAAA,sEAAuB,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAE5CC,UAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ,EAAsBC,OAAtB;AAF4C;AAAA,iBAGrBJ,KAAK,CAACQ,IAAN,WAAcP,OAAd,GAAyB;AAC5CQ,YAAAA,IAAI,EAAEN,QADsC;AAE5CO,YAAAA,GAAG,EAAEN;AAFuC,WAAzB,CAHqB;;AAAA;AAGtCO,UAAAA,QAHsC;AAO5CN,UAAAA,QAAQ,CAACO,QAAQ,EAAT,CAAR;AAP4C;AAAA;;AAAA;AAAA;AAAA;AAShDN,UAAAA,OAAO,CAACC,GAAR;;AATgD;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvB;;AAAA;AAAA;AAAA;AAAA,GAAtB;;AAaP,MAAMM,QAAQ,GAAIC,IAAD,KAAW;AAACC,EAAAA,IAAI,EAAE,eAAP;AAAwBC,EAAAA,OAAO,EAAE;AACzDF,IAAAA;AADyD;AAAjC,CAAX,CAAjB;;AAIA,OAAO,MAAMF,QAAQ,GAAG;AAAA,uEAAM,kBAAOP,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAECL,KAAK,CAACiB,GAAN,WAAahB,OAAb,EAFD;;AAAA;AAEhBU,UAAAA,QAFgB;AAGtBN,UAAAA,QAAQ,CAACQ,QAAQ,CAACF,QAAQ,CAACG,IAAV,CAAT,CAAR;AAHsB;AAAA;;AAAA;AAAA;AAAA;AAK1BR,UAAAA,OAAO,CAACC,GAAR;;AAL0B;AAAA;AAAA;AAAA;AAAA;AAAA,GAAN;;AAAA;AAAA;AAAA;AAAA,GAAjB","sourcesContent":["import axios from 'axios'\r\n\r\nconst baseUrl = 'https://us-central1-missao-newton.cloudfunctions.net/generic/planner-sagan-eduardoteste2'\r\n\r\nexport const createNewTask = (nameData, dayData) => async (dispatch) => {\r\n    try {\r\n        console.log(nameData, dayData)\r\n        const response = await axios.post(`${baseUrl}`, {\r\n            text: nameData,\r\n            day: dayData\r\n        });\r\n        dispatch(getTasks())\r\n    } catch (error) {\r\n    console.log(`erro: ${error}`)\r\n    }\r\n}\r\n\r\nconst setTasks = (data) => ({type: 'SET_TASK_LIST', payload: {\r\n    data\r\n}})\r\n\r\nexport const getTasks = () => async (dispatch) => {\r\n    try {\r\n        const response = await axios.get(`${baseUrl}`);\r\n        dispatch(setTasks(response.data))\r\n    } catch (error) {\r\n    console.log(`erro: ${error}`)\r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}